syntax = "proto3";

// import "google/protobuf/struct.proto";
// import "google/protobuf/timestamp.proto";
// import "google/protobuf/empty.proto";

option go_package="./proto";

package proto;

service Resourcex {
	rpc ResourcexHealthCheck(ResourcexHealthCheckRequest) returns (ResourcexHealthCheckResponse);

    // 客户端流式RPC方法，用于上传文件
    rpc ResourcexUploadFile(stream ResourcexUploadFileChunk) returns (ResourcexUploadFileResponse);
}

message ResourcexBaseResponse {
	int32 code = 1;
	string message = 2;
}

message ResourcexHealthCheckRequest {
	string service = 1;
}

message ResourcexHealthCheckResponse {
	enum ServiceStatus{
		UNKNOWN = 0;
		SERVING = 1;
		NOT_SERVING = 2;
		SERVICE_UNKNOWN = 3;
	}
	ServiceStatus status = 1;
}

message ResourcexUploadFileChunk {
    oneof chunk {
        // 文件元数据（文件名、MD5等）
        ResourcexUploadFileMetadata metadata = 1; 
        // 文件数据块
        bytes data = 2;             
    }
}

message ResourcexUploadFileMetadata {
    // 客户端请求id,客户端自行保证其唯一
    string requestId = 1;
    // 发送此文件的app
    string app = 2;
    // 此文件的标签，通常用于区分业务
    string tag = 3;
    // 租户id
    string tenantId = 4;
    // 所对应的空间id
    string spaceObjectId = 5;
    // 指定存储到服务器中的文件路径
    string fullFilePath = 6;
    // 文件名
    string fileName = 7;
    // 上传文件的用户id
    string userId = 8;
    // 文件的MD5哈希值
    string fileMd5 = 9;
    // 文件大小
    int64 fileSize = 10;
    // 文件内容类型
    string contentType = 11;
    // 文件描述
    string description = 12;
    // 下载时服务器给的文件名
    string downloadFileName = 13;
}

message ResourcexUploadFileResponse {    
    // 是否成功
    bool success = 1;
    // 如果失败，则返回失败结果 
    string message = 2;
    // 返回客户端请求时的id
    string requestId = 3;
    // 文件对象id
    string fileObjectId = 4;
    // 资源名称
    string resourceName = 5;
    // 文件名
    string fileName = 6;
    // 文件下载url
    string downloadUrl = 7;
    string downloadFileName = 8;
}